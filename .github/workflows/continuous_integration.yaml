# This workflow automates the CI/CD pipeline for the application.
# It builds a Docker image, pushes it to Google Artifact Registry, and deploys it to Cloud Run.

name: CI/CD Pipeline

# Define the events that trigger this workflow.
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # Allow the workflow to be triggered manually.
  workflow_dispatch:

# Define environment variables for the entire workflow.
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: us-central1 # Change to your preferred region
  SERVICE_NAME: my-cloudrun-service
  AR_REPOSITORY: my-gcr-repo # The name of your Artifact Registry repository
  AR_IMAGE_NAME: my-app-image

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Required for OIDC authentication
      packages: 'write' # Required to push to Artifact Registry

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Google Cloud authentication using Workload Identity Federation.
      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/${{ env.PROJECT_ID }}/locations/global/workloadIdentityPools/github-pool/providers/github'
          service_account: 'cloud-run-deploy@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'

      # Configure Docker to authenticate with Google Artifact Registry.
      - name: 'Configure Docker to use Artifact Registry'
        run: 'gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev'

      # Build the Docker image.
      - name: 'Build Docker image'
        run: |
          # Use a variable to define the full image path for easy access.
          export AR_IMAGE_PATH="${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPOSITORY }}/${{ env.AR_IMAGE_NAME }}:latest"
          echo "IMAGE_PATH=$AR_IMAGE_PATH" >> $GITHUB_ENV
          docker build --tag "$AR_IMAGE_PATH" .

      # Push the Docker image to Artifact Registry.
      - name: 'Push to Artifact Registry'
        run: docker push ${{ env.IMAGE_PATH }}

      # Deploy the image to Cloud Run.
      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.GCP_REGION }}
          image: ${{ env.IMAGE_PATH }}
          flags: --allow-unauthenticated # or remove this line to require authentication
